name: Portal CI & CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUBY_VERSION: 3.2.2

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports: ["3306:3306"]
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: rails_test
          MYSQL_USER: rails
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping -h localhost -p$MYSQL_ROOT_PASSWORD"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=10

    env:
      RAILS_ENV: test
      DATABASE_URL: "mysql2://rails:password@127.0.0.1:3306/rails_test"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Update Bundler
        run: gem install bundler

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmysqlclient-dev

      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          timeout 30s bash -c 'until mysqladmin ping -h 127.0.0.1 -u rails -ppassword --silent; do sleep 1; done'

      - name: Set up database
        run: |
          bin/rails db:create
          bin/rails db:migrate
          bin/rails db:seed

      # - name: Run tests
      #   run: bundle exec rspec

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Update Bundler
        run: gem install bundler

      - name: Lint Ruby files
        run: bundle exec rubocop --parallel

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Debug SSH_PRIVATE_KEY
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | head -c 20

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 51.68.199.136 >> ~/.ssh/known_hosts

      - name: Debug SSH key file
        run: |
          ls -l ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa | wc -l

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@51.68.199.136 << 'EOF'
            cd /home/ubuntu/portal || { echo "Directory not found!"; exit 1; }
            chmod +x deploy.sh
            ./deploy.sh
          EOF
