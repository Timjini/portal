name: Portal CI & CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 2s
          --health-retries 10

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: Update Bundler
        run: gem install bundler

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          timeout 30s bash -c 'until pg_isready -h localhost -p 5432 -U rails -d rails_test; do sleep 1; done'

      - name: Set up database
        run: |
          bin/rails db:create
          bin/rails db:migrate
          bin/rails db:seed

      - name: Run tests
        run: bundle exec rspec

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: Update Bundler
        run: gem install bundler

      - name: Lint Ruby files
        run: bundle exec rubocop --parallel

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:

      - name: Debug SSH_PRIVATE_KEY
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | head -c 20

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 51.68.199.136 >> ~/.ssh/known_hosts
      
      - name: Debug key presence
        run: |
          ls -la ~/.ssh
          file ~/.ssh/id_rsa

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@51.68.199.136 << 'EOF'
            /portal/deploy.sh
          EOF
