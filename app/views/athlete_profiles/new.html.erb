<script defer>
function onDocumentReady(callback) {
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', callback);
    } else {
        callback();
    }
}

onDocumentReady(function() {
    const searchInput = document.getElementById('user-search');
    console.log(searchInput);
    const userIdInput = document.getElementById('user-id');
    const suggestionsContainer = document.getElementById('suggestions-container');

    searchInput.addEventListener('input', function() {
        const term = searchInput.value;

        // Clear suggestions if the search term is empty
        if (term === '') {
            suggestionsContainer.innerHTML = '';
            return;
        }

        // Make an AJAX request to the autocomplete endpoint
        fetch(`/athlete_users/autocomplete?term=${term}`)
            .then(response => response.json())
            .then(data => {
                console.log(data);
                // Clear previous results
                suggestionsContainer.innerHTML = '';

                // Display autocomplete suggestions
                if (data.length > 0) {
                    data.forEach(user => {
                        const suggestionDiv = document.createElement('div');
                        suggestionDiv.classList.add('suggestions-box');
                        suggestionDiv.textContent = `${user.username} - ${user.email} - ${user.first_name} - ${user.last_name}`;
                        suggestionDiv.setAttribute('data-user-id', user.id);
                        suggestionDiv.addEventListener('click', function() {
                            // Set the selected user's information inside the search box
                            searchInput.value = `${user.username} - ${user.email} - ${user.first_name} - ${user.last_name}`;
                            // Set the selected user's ID to the hidden input field
                            userIdInput.value = user.id;

                            if (user.id !== null) {
                                const userId = user.id;
                                fetch(`/users/${userId}`)
                                    .then(response => response.json())
                                    .then(userData => {
                                        console.log(userData);
                                        const usernameInput = document.getElementById('user-username');
                                        const userEmail = document.getElementById('user-email');
                                        const userFirstName = document.getElementById('user-firstName');
                                        const userLastName = document.getElementById('user-lastName');

                                        // usernameInput.placeholder = userData.username;
                                        // usernameInput.value = userData.username;
                                        // userEmail.placeholder = userData.email;
                                        // userEmail.value = userData.email;
                                        // userFirstName.placeholder = userData.first_name;
                                        // userFirstName.value = userData.first_name;
                                        // userLastName.placeholder = userData.last_name;
                                        // userLastName.value = userData.last_name;
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                    });
                            }
                            // Clear the suggestions container after selecting a user
                            suggestionsContainer.innerHTML = '';
                        });
                        suggestionsContainer.appendChild(suggestionDiv);
                    });
                } else {
                    // If there are no suggestions, display a message
                    const noResultsDiv = document.createElement('div');
                    noResultsDiv.textContent = 'No matching users found.';
                    suggestionsContainer.appendChild(noResultsDiv);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });
});

function handleClick(element) {
    // Remove active class from all links
    var links = document.querySelectorAll('.toggle-link');
    const searchInput = document.getElementById('user-search');
    console.log(searchInput.value);
    links.forEach(function(link) {
        link.classList.remove('active', 'text-blue-600', 'border-blue-600', 'dark:text-blue-500', 'dark:border-blue-500');
        console.log(link.classList);
    });

    // Apply active class to the clicked link
    element.classList.add('active', 'text-blue-600', 'border-blue-600', 'dark:text-blue-500', 'dark:border-blue-500');
}

onDocumentReady(function() {
    const toggleLinks = document.querySelectorAll('.toggle-link');
    const toggleSections = document.querySelectorAll('.toggle-section');

    toggleLinks.forEach(link => {
        link.addEventListener('click', function(event) {
            event.preventDefault();

            const targetId = link.getAttribute('href').substring(1);

            toggleSections.forEach(section => {
                if (section.id === targetId) {
                    section.style.display = 'flex';
                    section.style.flexDirection = 'column';
                } else {
                    section.style.display = 'none';
                }
            });
        });
    });
});


</script>


<% @links = ["Athlete", "Data"] %>


<div class="athlete-form-container">
    <div class="text-sm font-medium text-center text-gray-500  border-gray-200 dark:text-gray-400 dark:border-gray-700 hidden">
        <ul class="flex flex-wrap -mb-px">
            <% @links.each do |link| %>
                <li class="mr-2">
                    <a href="#<%= link.downcase %>" onclick="handleClick(this)" class="toggle-link inline-block p-4 border-b-2 border-transparent rounded-t-lg  hover:border-gray-300 dark:hover:text-gray-300"
                    aria-current="page">
                        <%= link %>
                    </a>
                </li>
            <% end %>
        </ul>
    </div>
    <%= form_for @athlete do |form| %>
        <section id="<%=@links.first.downcase%>" class="toggle-section " style="display:flex;">
            <%= form.hidden_field :user_id, id: "user-id", class: "here" %>
            <article class="search-form p-10 flex flex-col justify-between rounded-xl text-gray-500 xl:col-span-2 transform duration-500 hover:-translate-y-1 cursor-pointer dark:text-gray-100">
                            <div>
                                <h2 class="mt-5 text-2xl font-light text-gray-500  dark:text-gray-100 leading-snug  min-h-10"> Search the Athlete </h2>
                                <p class="mt-5 font-light">Tap next if athlete not registered</p>
                                    <div class="mt-10">
                                        <div class="searchbox">
                                            <div>
                                            <label for="user-search" class="block mb-2 text-sm font-medium text-gray-500 dark:text-white">Username</label>
                                                <div class="flex">
                                                <span class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600">
                                                    <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                                        <path d="M10 0a10 10 0 1 0 10 10A10.011 10.011 0 0 0 10 0Zm0 5a3 3 0 1 1 0 6 3 3 0 0 1 0-6Zm0 13a8.949 8.949 0 0 1-4.951-1.488A3.987 3.987 0 0 1 9 13h2a3.987 3.987 0 0 1 3.951 3.512A8.949 8.949 0 0 1 10 18Z"/>
                                                    </svg>
                                                </span>
                                                <input type="text" id="user-search" placeholder="Enter username or email" class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900  block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white " >
                                                </div>
                                            </div>
                                            <div id="suggestions-container"></div>
                                        </div>
                                    </div>
                            </div>
                            <div class="mt-8 flex justify-between inset-x-0 bottom-0 ">
                                <span class="p-3 pl-0 font-bold"></span>
                                <a href="#<%=@links.second.downcase%>" onclick="handleClick(this)" class="toggle-link">
                                <span class="p-3 px-12 text-gray-500  border-2 border-gray-200 rounded-md text-base hover:bg-gray-200 hover:border-gray-200 cursor-pointer hover:text-black ">
                                Next
                                </span>
                                </a>
                            </div>
            </article>
        </section>


        <section id="<%=@links.second.downcase%>" class="toggle-section">
        <article class=" p-10 min-h-116 max-w-3xl w-full rounded-xl text-gray-500 xl:col-span-2 transform duration-500 hover:-translate-y-1 cursor-pointer dark:text-gray-100">
                            <h2 class="mt-5 text-2xl font-light text-gray-500  dark:text-gray-100 leading-snug  min-h-10"> Athlete's Data </h2>
                            <p class="mt-5 font-light">Tap next if athlete not registered</p>
                        <div class="mt-20">
                            <div class="mt-10 flex flex-row">
                                <%= form.text_field :height ,placeholder: "5'10''", id:"height", class:"m-2 rounded bg-gray-50 border text-gray-900  block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white"%>
                                <%= form.text_field :weight ,placeholder:"80 lbs",  class:"m-2 rounded bg-gray-50 border text-gray-900  block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" %>
                            </div>
                             <div class="mt-10 flex flex-row">
                                <%= form.text_field :power_of_ten ,placeholder: "Power of ten", id:"height", class:"m-2 rounded bg-gray-50 border text-gray-900  block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white"%>
                                <%= select_tag :level, options_for_select(AthleteProfile.levels.map { |key, value| [AthleteProfile.human_attribute_name("level.#{key}"), value] }, @athlete.level.to_i), class: 'm-2 rounded bg-gray-50 border text-gray-900  block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white' %>
                            </div>
                        </div>
                        <div class="mt-16 flex justify-between ">
                            <a href="#<%=@links.first.downcase%>" onclick="handleClick(this)" class="toggle-link">
                            <span class="p-3 px-12 border-2 border-gray-200 rounded-md text-base hover:bg-gray-200 hover:border-gray-200 cursor-pointer hover:text-black ">
                            Back
                            </span>
                            </a>
                            <%= form.submit "Save", class: "confirm-btn" %>
                        </div>
        </article>
        </section>
    <%end%>
</div>


